<?xml version="1.0" encoding="UTF-8"?>
<!--
Created by Casey Butenhoff on 2017.11.18
Copyright Â© 2017 Casey Butenhoff. All rights reserved.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <!-- Do not enter tags before the composition line since they are ignored by JSF -->

    <!-- This page is constructed based on the siteTemplate -->
    <ui:composition template="template/siteTemplate.xhtml">
        <ui:define name="title">
            <!-- Set the page title -->
            <h:outputText value="#{heatmapController.project.name} Project Activity Heatmap"></h:outputText>
        </ui:define>

        <!-- Create the content for this page below -->
        <ui:define name="editableContent">
            <h:form>
                <p:growl id="messages" showDetail="true" />

                <div align="center">
                    <h3>#{heatmapController.project.name} Project Activity Heatmap</h3>

                    <!--
                    Show a table of heatmap values using data from the
                    controller and a dynamic number of columns which are also
                    provided by the controller. Iterates over each row in
                    heatmapMaps and stores the current one in the 'heatmapMap'
                    variable.
                    -->
                    <p:dataTable value="#{heatmapController.heatmapTable.heatmapMaps}"
                                 var="heatmapMap"
                                 styleClass="borderless headerless unpadded"
                                 tableStyle="width:auto">

                        <!--
                        Since we are generating the columns dynamically, we must
                        retrieve column objects from the controller which
                        contain the information necessary to set them up. The
                        columns are iterated over and each column is assigned to
                        the 'column' variable in turn for use by the enclosed
                        code.
                        -->
                        <p:columns value="#{heatmapController.heatmapTable.columns}" var="column">

                            <!--
                            We define the header text for the column in a
                            special named section called a facet. This prevents
                            the header text from being repeated in each row even
                            though most of the code within the p:datatable tag
                            is repeated for each 'heatmapMap' row in
                            heatmapController.heatmapTable.heatmapMaps.
                            -->
                            <f:facet name="header">

                                <!--
                                The header simply contains the header text
                                defined by the column object we retrieved from
                                the controller
                                -->
                                <h:outputText value="#{column.header}" />
                            </f:facet>

                            <!--
                            This defines the actual contents of the cell in the
                            current column. heatmapMap contains the current row
                            that p:datatable is iterating over, so we must
                            index into it in order to find the actual data that
                            corresponds to the current column that p:columns
                            is iterating over. We also set the background color
                            to the appropriate color in order to make it easy to
                            glance at the chart and immediately know how the
                            project activity was distributed over its lifetime.
                            -->
                            <h:outputText value="#{heatmapMap[column.property].value}"
                                          style="background-color: #{heatmapMap[column.property].color}" />
                        </p:columns>
                    </p:dataTable>
                    <br /><br />

                </div>
            </h:form>
            <style type="text/css">
                .value {
                    width: 1000px;
                }
            </style>
        </ui:define>
    </ui:composition>
</html>
