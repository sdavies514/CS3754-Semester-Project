<?xml version="1.0" encoding="UTF-8"?>
<!--
Created by Casey Butenhoff on 2017.11.18
Copyright Â© 2017 Casey Butenhoff. All rights reserved.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <!-- Do not enter tags before the composition line since they are ignored by JSF -->

    <!-- This page is constructed based on the siteTemplate -->
    <ui:composition template="template/siteTemplate.xhtml">
        <ui:define name="title">
            <!-- Set the page title -->
            <h:outputText value="Sign In"></h:outputText>
        </ui:define>

        <!-- Create the content for this page below -->
        <ui:define name="editableContent">
            <h:head>
                <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js">
                </script>
                <script src="https://apis.google.com/js/client:platform.js?onload=start" async="defer">
                </script>
                <script>
                    function start() {
                        gapi.load('auth2', function () {
                            auth2 = gapi.auth2.init({
                                client_id: '152469586034-0gsehfd87qe5b58gr7jlvtopq2usreeb.apps.googleusercontent.com',
                                // Scopes to request in addition to 'profile' and 'email'
                                //scope: 'additional_scope'
                            });
                        });
                    }
                </script>
            </h:head>
            <div align="center" style="width:70%; margin:0 auto;">

                

                <!-- Error messages will be shown here if any -->
                <div align="center">
                    <p:messages showIcon="false"/>
                    <h:outputLabel id="form-error-message" class="errorMessages"
                                   value="#{loginManager.errorMessage}"/>
                </div>
                <br />

                <h:form id="loginForm">
                    <div id="my-signin2"></div>
                    <script>
                        function onSuccess(googleUser) {
                            auth2.grantOfflineAccess().then(signInCallback);
                            $('#my-signin2').attr('style', 'display: none');
                            console.log('Logged in as: ' + googleUser.getBasicProfile().getId());
                            console.log('Logged in as: ' + googleUser.getBasicProfile().getGivenName());
                            console.log('Logged in as: ' + googleUser.getBasicProfile().getFamilyName());
                            console.log('Logged in as: ' + googleUser.getBasicProfile().getImageUrl());
                            console.log('Logged in as: ' + googleUser.getBasicProfile().getEmail());
                            document.getElementById("loginForm:googleUsername").value = googleUser.getBasicProfile().getEmail();
                            document.getElementById("loginForm:googleFirstName").value = googleUser.getBasicProfile().getGivenName();
                            document.getElementById("loginForm:googleLastName").value = googleUser.getBasicProfile().getFamilyName();
                            document.getElementById("loginForm:googleImageUrl").value = googleUser.getBasicProfile().getImageUrl();
                            document.getElementById("loginForm:googleId").value = googleUser.getBasicProfile().getId();
                            sendGoogleInfo();
                            window.location.href = "http://localhost:8080/CS3754-Semester-Project/Profile.xhtml"
                        }
                        function onFailure(error) {
                            console.log(error);
                        }
                        function renderButton() {
                            gapi.signin2.render('my-signin2', {
                                'scope': 'profile',
                                'width': 240,
                                'height': 50,
                                'longtitle': true,
                                'theme': 'dark',
                                'onsuccess': onSuccess,
                                'onfailure': onFailure
                            });
                        }
                    </script>
                    <br/>
                    <h2>Or Sign In with Your Thoughtware Account</h2>

                    <script src="https://apis.google.com/js/platform.js?onload=renderButton" async="defer"></script>

<!--                    <button id="googleSignInButton" class="commandButton" ajax="false" icon="ui-icon-arrowthick-1-e">
                        Sign In with Google
                    </button>-->
                    <script>
//      $('#googleSignInButton').click(function () {
//          // signInCallback defined in step 6.
//          auth2.grantOfflineAccess().then(signInCallback);
//          return false;
//      });
                    </script>
                    <script>
                        function signInCallback(authResult) {
                            if (authResult['code']) {

                                // Hide the sign-in button now that the user is authorized, for example:
//                                $('#googleSignInButton').attr('style', 'display: none');
                                console.log("test");
                                return false;
                            } else {
                                console.log("error");
                                return false;
                                // There was an error.
                            }
                        }
                    </script>

                    <p:remoteCommand name="sendGoogleInfo" actionListener="#{loginManager.signedInWithGoogle()}">
                    </p:remoteCommand>

                    <h:inputHidden id="googleUsername" value="#{loginManager.googleUsername}"/>
                    <h:inputHidden id="googleFirstName" value="#{loginManager.googleFirstName}"/>
                    <h:inputHidden id="googleLastName" value="#{loginManager.googleLastName}"/>
                    <h:inputHidden id="googleImageUrl" value="#{loginManager.googleImageUrl}"/>
                    <h:inputHidden id="googleId" value="#{loginManager.googleId}"/>

                    <p:panelGrid columns="2" columnClasses="signInColumn1, signInColumn2">

                        <h:outputLabel value="Username:" for="username" />
                        <p:inputText id="username" value="#{loginManager.username}" required="true" styleClass="signInInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_username}" label="Username" >
                        </p:inputText>

                        <h:outputLabel value="Password:" for="password" />
                        <p:password id="password" value="#{loginManager.password}" feedback="false" styleClass="signInInputTextField" >
                        </p:password>

                    </p:panelGrid>
                    <br/>
                    <br/>
                    <p:commandButton id="login" value="Sign In" action="#{loginManager.loginUser()}"
                                     styleClass="commandButton" ajax="false" icon="ui-icon-arrowthick-1-e" />
                    &nbsp;
                    <p:commandButton id="create" value="Create an Account" action="#{loginManager.createUser()}"
                                     styleClass="commandButton" ajax="false" icon="ui-icon-plus" />
                    &nbsp;
                    <p:commandButton id="retrieve" value="Forgot Password" action="#{loginManager.resetPassword()}"
                                     styleClass="commandButton" ajax="false" icon="ui-icon-refresh" />
                    &nbsp;
                    <p:button outcome="index" value="Cancel" icon="ui-icon-cancel" styleClass="commandButton" />
                </h:form>

            </div>
            <br/><br/><br/>
        </ui:define>
    </ui:composition>
    <!-- Do not enter tags after the composition line since they are ignored by JSF -->

</html>
